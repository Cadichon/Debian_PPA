#!/usr/bin/env bash

tmp_file=$( (uname -a && date) | md5sum | cut -f1 -d" ")

usage ()
{
    echo "Usage: $0 (ppa | repo | update)"
    echo "Automatically add a repo or a ppa in repo list"
    echo
    echo "ppa: had to be in form \"ppa:user/ppa-name\" [ubuntu version]"
    echo "repo: had to be in form \"deb repo-url branch section1 [other-section]\""
}

check_dep ()
{
    if [ $# -eq 2 ]
    then
	dep=$1
	package=$2
    else
	dep=$1
	package=$1
    fi

    check=$(whereis -b $1)

    if [[ !(-a $(cut -d ' ' -f 2 <<< $check)) ]]
    then
       echo "You need \"$dep\" to use this tool"
       echo "Install it launching as root:"
       echo "apt install $package"
       return 1
    fi
    return 0
}

update_funct ()
{
    if !(check_dep "diff" "diffutils")
    then
	exit 1
    fi

    if check_dep "curl" > /dev/null
    then
	curl -s "https://raw.githubusercontent.com/Cadichon/Debian_PPA/master/add-apt-repository" > "/tmp/$tmp_file"
    elif check_dep "wget" > /dev/null
    then
	 wget -q "https://raw.githubusercontent.com/Cadichon/Debian_PPA/master/add-apt-repository" -O "/tmp/$tmp_file"
    else
	echo "You need either \"curl\" or \"wget\" to use this tool"
	echo "Install one of them launching as root:"
	echo "apt install <one-of-them>"
	exit 1
    fi

    if !(diff "/usr/bin/$0" "/tmp/$tmp_file" > /dev/null)
    then
	echo "Updating"
	rm "/usr/bin/$0"
	mv "/tmp/$tmp_file" "/usr/bin/$0"
	chmod +x "/usr/bin/$0"
    else
	echo "Already Up-to-date"
    fi
}

last_char ()
{
    str=$1
    echo "${str: -1}"
}

test_repo ()
{
    tested_repo="${@: -1}"
    url=$2
    if [ $(last_char "$url") != "/" ]
    then
	url="$url/"
    fi
    dist="dists/"
    distrib=$3
    if [ $(last_char "$distrib") != "/" ]
    then
	distrib="$distrib/"
    fi
    main=$4
    url="$url$dist$distrib$main"
    if check_dep "curl"
    then
	if !(curl -s --head "$url" | head -n 1 | grep "HTTP/1.[01] [23].." > /dev/null)
	then
	    echo "WARNING $url is NOT a valid repository"
	    return 1
	else
	    return 0
	 fi
    else
	echo "WARNING curl is not installed on your system"
	echo "can't check if this repo :"
	echo $tested_repo
	echo "is valid"
	return 0
    fi
}

add_deb_rep ()
{
    count=1
    repo=""
    while [ $count -le $# ]
    do
	repo="$repo ${!count}"
	(( count++ ))
    done
    if test_repo $repo "$repo"
    then
	echo "${repo:1}" >> /etc/apt/sources.list
	echo "Adding ${repo:1} to /etc/apt/sources.list"
    else
	exit 1
    fi
}

add_ppa ()
{
    ppa_name=$(echo "$1" | cut -d":" -f2 -s)
    if [ -z "$ppa_name" ]
    then
	echo "PPA name not found"
    else
	echo "$ppa_name"
	if [ $# -eq 1 ]
	then
	    ppa_url="deb http://ppa.launchpad.net/$ppa_name/ubuntu xenial main"
	else
	    ppa_url="deb http://ppa.launchpad.net/$ppa_name/ubuntu $2 main"
	fi
	if test_repo $ppa_url "ppa_$url"
	then
	    echo "$ppa_url" >> /etc/apt/sources.list
	else
	    exit 1
	fi
	apt update > /dev/null 2> "/tmp/$tmp_file"
	if grep -q NO_PUBKEY "/tmp/$tmp_file"
	then
	    echo "Public key to add :"
	    cat "/tmp/$tmp_file" | grep NO_PUBKEY | sed -E "s/^.*NO_PUBKEY (.+)$/\1/" | xargs -i echo "- " {}
	    cat "/tmp/$tmp_file" | grep NO_PUBKEY | sed -E "s/^.*NO_PUBKEY (.+)$/\1/" | xargs -i apt-key adv --keyserver keyserver.ubuntu.com --recv-key {}
	else
	    echo "No public key to add"
	fi
	rm -rf "/tmp/$tmp_file"
    fi
}

if [ $(whoami) != 'root' ]
then
    echo 'Launch me as root'
    exit 1
fi

if !(check_dep "dirmngr")
then
    exit 1
fi

if [ $# -eq 0 ]
then
    usage
    exit 0
fi

case "$1" in
    "-h")
	usage
	;;
    "--help")
	usage
	;;
    update)
	update_funct
	;;
    deb*)
	add_deb_rep $*
	;;
    *)
	add_ppa $*
esac
